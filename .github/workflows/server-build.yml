name: ServerBuild

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to. Dev is default'
        default: 'Dev'
        type: choice
        options:
          - Dev
          - QA
          - Prod

  push:
    branches:
      - main

run-name: "Server - Build (${{ github.ref_name }}) 1.0.0.${{ github.run_number }}"

env:
  SLN_FILENAME: dyvenix.sln
  AZURE_WEBAPP_NAME: dyvenix-server
  AZURE_WEBAPP_PACKAGE_PATH: src/server/server.api/publish
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 9.0.x
  SERVER_ROOT_DIR: src/server/server.api
  VER_MAJOR: "1"
  VER_MINOR: "0"
  VER_PATCH: "0"
  APP_ENV: ${{ github.event.inputs.environment != '' && github.event.inputs.environment || 'Dev' }}

jobs:

  build:
    runs-on: ubuntu-latest

    outputs:
      artifact_name: ${{ steps.set-version.outputs.artifact_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build version numbers
        id: set-version
        run: |
          VERSION="${{ env.VER_MAJOR }}.${{ env.VER_MINOR }}.${{ env.VER_PATCH }}.${{ github.run_number }}"
          SHORT_VERSION="${{ env.VER_MAJOR }}.${{ env.VER_MINOR }}.${{ env.VER_PATCH }}"
          ARTIFACT_NAME="Dyvenix_Portal_${VERSION}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "SHORT_VERSION=${SHORT_VERSION}" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=${ARTIFACT_NAME}" >> $GITHUB_ENV
          echo "artifact_name=${ARTIFACT_NAME}" >> $GITHUB_OUTPUT

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      - name: Dotnet Publish
        run: dotnet publish "${{ env.SERVER_ROOT_DIR }}/Server.Api.csproj" --configuration ${{ env.CONFIGURATION }} --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}" -p:Version=${{ env.VERSION }}

      - name: Publish GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          retention-days: 7

  deploy:
    needs: build
    if: contains(github.event.head_commit.message, '[deploy]')
    environment: ${{ github.event.inputs.environment != '' && github.event.inputs.environment || 'Dev' }}
    runs-on: ubuntu-latest
    steps:

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.artifact_name }}
          path: .
          merge-multiple: true

      - name: Update JSON Values with Secrets
        run: |
          jq ".AuthConfig.AzureAdB2C.ClientSecret = \"${{ secrets.SVR_B2C_CLIENT_SECRET }}\" |
            .DataConfig.ConnectionString = \"${{ secrets.SVR_DB_CONN_STR }}\" |
            .LogConfig.DbConnectionString = \"${{ secrets.SVR_LOG_DB_CONN_STR }}\" |
            .LogConfig.FilePath = \"${{ secrets.SVR_LOG_PATH }}\" |
            .LogConfig.SelfLogPath = \"${{ secrets.SVR_LOG_SELFLOG_PATH }}\"" appsettings.json > tmp.json && mv tmp.json appsettings.json

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZ_GITHUB_DEPLOY_SP }}

      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ./${{ needs.build.outputs.artifact_name }}

